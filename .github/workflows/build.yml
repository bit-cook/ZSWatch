on: [workflow_call]

jobs:
  build:
    runs-on: ubuntu-24.04
    container: ghcr.io/zephyrproject-rtos/ci:v0.27.4
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    strategy:
      matrix:
        built_type: [debug]
        board: [watchdk@1/nrf5340/cpuapp]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ZSWatch
          submodules: recursive

      - name: Dependencies
        run: |
          wget https://sourceforge.net/projects/astyle/files/astyle/astyle%203.4/astyle-3.4.10.tar.bz2/download -O astyle.tar.bz2
          tar -xf astyle.tar.bz2
          cd astyle-3.4.10
          mkdir -p as-gcc-exe
          cd as-gcc-exe
          cmake ../
          make
          make install

      - name: Initialize
        working-directory: ZSWatch
        run: |
          west init -l app
          west config manifest.group-filter +bsec2
          west update -o=--depth=1 -n
          mkdir -p fw_images

          python -m pip install --upgrade pip
          pip install -r nrf/scripts/requirements-build.txt
          pip install -r app/scripts/requirements.txt
      
      - name: Style
        working-directory: ZSWatch
        run: |
          west format --dry-run
      
      - name: Define build directory name
        working-directory: ZSWatch
        run: |
          # Since board name contains slashes, we need to replace them with underscores
          # as the board name is used as part of the build directory name.
          # It's output to GITHUB_ENV so it can be used in the next steps
          # and only needs to be calculated once.
          BUILD_DIR=${{ matrix.board }}_${{ matrix.built_type }}
          echo "BUILD_DIR=${BUILD_DIR}" | sed 's/\//_/g' >> $GITHUB_ENV

      - name: Generate external filesystem images
        working-directory: ZSWatch
        run: |
          west upload_fs --type raw --generate_only
          west upload_fs --type lfs --generate_only

          # Copy the filesystem images into the firmware zip
          mv lvgl_resources_lfs fw_images/lvgl_resources_lfs.bin
          mv lvgl_resources_lfs.hex fw_images/lvgl_resources_lfs.hex
          mv lvgl_resources_raw fw_images/lvgl_resources_raw.bin
          mv lvgl_resources_raw.hex fw_images/lvgl_resources_raw.hex

      - name: Build firmware
        if: ${{ matrix.board != 'native_sim/native/64' }}
        working-directory: ZSWatch
        run: |
          EXTRA_ARGS=""
          # Add extra conf files for debug build
          if [ "${{ matrix.built_type }}" = "debug" ]; then
            EXTRA_ARGS="$EXTRA_ARGS -DEXTRA_CONF_FILE=boards/debug.conf;log_on_uart.conf -DEXTRA_DTC_OVERLAY_FILE=boards/log_on_uart.overlay"
          fi
          if [ "${{ matrix.board }}" = "zswatch@3/nrf5340/cpuapp" ]; then
            EXTRA_ARGS="$EXTRA_ARGS -DSB_CONF_FILE=sysbuild_no_mcuboot_no_xip.conf"
          fi
          export EXTRA_ARGS
          west build app --build-dir ${{ env.BUILD_DIR }} -p -b ${{ matrix.board }} -- ${EXTRA_ARGS} -DBOARD_ROOT=${PWD}/app
          mv ${{ env.BUILD_DIR }}/app/zephyr/zephyr.hex fw_images/${{ env.BUILD_DIR }}.hex
          mv ${{ env.BUILD_DIR }}/app/zephyr/zephyr.elf fw_images/${{ env.BUILD_DIR }}.elf
          if [ -f "${{ env.BUILD_DIR }}/dfu_application.zip" ]; then
            mv ${{ env.BUILD_DIR }}/dfu_application.zip fw_images/dfu_application.zip
          fi

          west build app --build-dir ${{ env.BUILD_DIR }}_rotated -p -b ${{ matrix.board }} -- ${EXTRA_ARGS} -DEXTRA_DTC_OVERLAY_FILE="boards/clockwise_rotation.overlay" -DBOARD_ROOT=${PWD}/app
          mv ${{ env.BUILD_DIR }}_rotated/app/zephyr/zephyr.hex fw_images/${{ env.BUILD_DIR }}_rotated.hex
          mv ${{ env.BUILD_DIR }}_rotated/app/zephyr/zephyr.elf fw_images/${{ env.BUILD_DIR }}_rotated.elf
          if [ -f "${{ env.BUILD_DIR }}_rotated/dfu_application.zip" ]; then
            mv ${{ env.BUILD_DIR }}_rotated/dfu_application.zip fw_images/dfu_application_rotated.zip
          fi

          # Only one copy of Net Core image needed, it's the same for all builds
          mv ${{ env.BUILD_DIR }}/merged_CPUNET.hex fw_images/zswatch_nrf5340_CPUNET.hex

      - name: Build native_posix
        if: ${{ matrix.board == 'native_posix/native' }}
        working-directory: ZSWatch
        run: |
          west build app --build-dir ${{ env.BUILD_DIR }} -p -b ${{ matrix.board }} -- -DSB_CONF_FILE=sysbuild_no_mcuboot_no_xip.conf
      
      - name : Upload Firmware
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.BUILD_DIR }}
          path: |
            ZSWatch/fw_images
          if-no-files-found: ignore
