/*
 * Copyright (c) 2025 ZSWatch Project
 * SPDX-License-Identifier: Apache-2.0
 */

#include "nrf5340_cpuapp_common-pinctrl.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/regulator/npm1300.h>

/ {
    chosen {
        zephyr,bt-mon-uart = &uart0;
        zephyr,bt-c2h-uart = &uart0;
        zephyr,bt-hci = &bt_hci_ipc0;
        zephyr,ieee802154 = &ieee802154;
        zephyr,display = &gc9a01;
        nordic,pm-ext-flash = &mx25u51245g;
    };

    lvgl_pointer_input: lvgl_pointer {
        compatible = "zephyr,lvgl-pointer-input";
        input = <&cst816s>;
        invert-y;
        swap-xy;
    };

    aliases {
        display-blk = &display_blk;
        vibrator-pwm = &vibrator_pwm;
        sw1 = &button1;
        sw2 = &button2;
        sw3 = &button3;
        sw4 = &button4;
        watchdog0 = &wdt0;
        mcuboot-button0 = &button1;
        spi-flash0 = &mx25u51245g;
        rtc = &rv_8263_c8;
    };
};

&vregmain {
    regulator-initial-mode = <NRF5X_REG_MODE_DCDC>;
};

&vregradio {
    regulator-initial-mode = <NRF5X_REG_MODE_DCDC>;
};

&vregh {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
    sense-edge-mask = <0xffffffff>;
};

&gpio1 {
    status = "okay";
};


&uicr {
    nfct-pins-as-gpios;
};


&uart0 {
    status = "okay";
    pinctrl-0 = <&uart0_default>;
    pinctrl-1 = <&uart0_sleep>;
    pinctrl-names = "default", "sleep";
    current-speed = <115200>;
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

&pwm1 {
    status = "okay";
    pinctrl-0 = <&pwm1_default>;
    pinctrl-1 = <&pwm1_sleep>;
    pinctrl-names = "default", "sleep";
};

&i2c1 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    zephyr,concat-buf-size = <512>;
};

&i2c2 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
};

&timer0 {
    status = "okay";
};

&timer1 {
    status = "okay";
};

&timer2 {
    status = "okay";
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 0x00010000>;
        };
        slot0_partition: partition@10000 {
            label = "image-0";
        };
        slot0_ns_partition: partition@50000 {
            label = "image-0-nonsecure";
        };
        slot1_partition: partition@80000 {
            label = "image-1";
        };
        slot1_ns_partition: partition@c0000 {
            label = "image-1-nonsecure";
        };
        scratch_partition: partition@f0000 {
            label = "image-scratch";
            reg = <0x000f0000 0xa000>;
        };
        storage_partition: partition@fa000 {
            label = "storage";
            reg = <0x000fa000 0x00006000>;
        };
    };
};

zephyr_udc0: &usbd {
    compatible = "nordic,nrf-usbd";
    status = "okay";
    cdc_acm_uart0: cdc_acm_uart0 {
        compatible = "zephyr,cdc-acm-uart";
    };
};

/ {
    longpress: longpress {
        input = <&buttons>;
        compatible = "zephyr,input-longpress";
        input-codes = <INPUT_KEY_KP0>;
        short-codes = <INPUT_KEY_3>;
        long-codes = <INPUT_KEY_Y>;
        long-delay-ms = <10000>;
    };

    buttons: buttons {
        compatible = "gpio-keys";

        button1: button_1 {
            label = "top-right";
            gpios = <&gpio0 19 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_1>;
        };

        button2: button_2 {
            label = "bottom-right";
            gpios = <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_KP0>;
        };

        button3: button_3 {
            label = "bottom-left";
            gpios = <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_2>;
        };

        button4: button_4 {
            label = "top-left";
            gpios = <&gpio0 26 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_4>;
        };
    };

    vib_pwr: vib-pwr-ctrl {
        compatible = "regulator-fixed";
        regulator-name = "vib-pwr-ctrl";
        enable-gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
    };

    mic_pwr: mic-pwr-ctrl {
        compatible = "regulator-fixed";
        regulator-name = "mic-pwr-ctrl";
        enable-gpios = <&gpio0 7 GPIO_ACTIVE_LOW>;
    };

    pwmleds {
        compatible = "pwm-leds";

        display_blk: pwm_led_0 {
            pwms = <&pwm0 0 PWM_USEC(15) PWM_POLARITY_INVERTED>;
        };

        vibrator_pwm: pwm_led_1 {
            pwms = <&pwm1 0 PWM_MSEC(20) 0>;
        };
    };

    reserved-memory {
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        sram0_image: image@20000000 {
            /* Zephyr image(s) memory */
        };

        sram0_s: image_s@20000000 {
            /* Secure image memory */
        };

        sram0_ns: image_ns@20040000 {
            /* Non-Secure image memory */
        };
    };

    sram@2006E000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x2006E000 0x2000>;
        zephyr,memory-region = "RetainedMem";
        status = "okay";

        retainedmem {
            compatible = "zephyr,retained-ram";
            status = "okay";
            #address-cells = <1>;
            #size-cells = <1>;

            retention_coredump: retention@0 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x0 0x1F00>;
                prefix = [04 fa];
                checksum = <1>;
            };

            retention0: retention@1F00 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1F00 0xFB>;
                prefix = [04 fa];
                checksum = <1>;
            };
            // Last byte in RAM is for boot mode.
            // Du to debugger only supports writing 4 bytes at a time
            // we need to leave a 3 byte gap between the two retention areas.
            retention1: retention@1FFF {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1FFF 0x1>;
            };
        };
    };

    chosen {
        zephyr,boot-mode = &retention1;
    };

    fstab {
        compatible = "zephyr,fstab";

        lvgl_lfs: lvgl_lfs {
            compatible = "zephyr,fstab,littlefs";
            mount-point = "/lvgl_lfs";
            partition = <&littlefs_storage>;
            automount;
            read-size = <512>;
            prog-size = <512>;
            cache-size = <512>;
            lookahead-size = <4096>;
            block-cycles = <512>;
        };
    };
};


&i2c1 {
    pinctrl-0 = <&i2c1_default>;
    pinctrl-1 = <&i2c1_sleep>;
    pinctrl-names = "default", "sleep";

    lis2mdl: lis2mdl@1e {
        compatible = "st,lis2mdl";
        reg = <0x1e>;
        status = "okay";
        irq-gpios = <&gpio0 21 0>;
        cancel-offset;
    };

    bmp581: bmp581@47 {
        compatible = "bosch,zsw_bmp581";
        reg = <0x47>;
        status = "okay";
    };

    rv_8263_c8: rv-8263-c8@51 {
        compatible = "microcrystal,rv-8263-c8";
        reg = <0x51>;
        status = "okay";
        clkout = <0>;
        int-gpios = <&gpio1 3 (GPIO_PULL_UP)>;
    };

    bmi270: bmi270@68 {
        compatible = "bosch,bmi270-plus";
        reg = <0x68>;
        status = "okay";
        int-gpios = <&gpio1 0 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
        // NOTE: The swap is performed AFTER the axis inversion. So we have to invert the y axis of the sensor
        // to get the x axis of the watch coordinate system.
        swap-xy;
        invert-y;
    };

    apds9306: apds9306@52 {
        compatible = "avago,apds9306";
        reg = <0x52>;
        status = "okay";
    };

    npm1300_pmic: pmic@6b {
        compatible = "nordic,npm1300";
        reg = <0x6b>;
        status = "okay";
        host-int-gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;
        pmic-int-pin = <4>;
        status = "okay";

        npm1300_gpio: gpio-controller {
            compatible = "nordic,npm1300-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            ngpios = <5>;
        };

        npm1300_regulators: regulators {
            compatible = "nordic,npm1300-regulator";

            npm1300_buck1: BUCK1 {
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <1800000>;
                regulator-boot-on;
                regulator-always-on;
            };

            regulator_buzzer: BUCK2 {
                regulator-min-microvolt = <3000000>;
                regulator-max-microvolt = <3000000>;
                regulator-init-microvolt = <3000000>;
            };

            npm1300_ldo1: LDO1 {
                status = "disabled";
            };

            npm1300_ldo2: LDO2 {
                status = "disabled";
            };
        };

        npm1300_charger: charger {
            compatible = "nordic,npm1300-charger";
            term-microvolt = <4400000>;
            term-warm-microvolt = <4000000>;
            current-microamp = <200000>; // 0.2C CC (constant current) charge to 4.4V,
            term-current-percent = <10>; // then 4.4V CV(constant voltage) charge till charge current decline to â‰¤ 0.02C
            dischg-limit-microamp = <1000000>;
            vbus-limit-microamp = <500000>;
            thermistor-ohms = <0>; // Don't use thermistor
            thermistor-beta = <3380>; // Not used
            charging-enable;
        };

        npm1300_buttons: buttons {
            compatible = "gpio-keys";
            status = "disabled";
        };
    };
};

&i2c2 {
    pinctrl-0 = <&i2c2_default>;
    pinctrl-1 = <&i2c2_sleep>;
    pinctrl-names = "default", "sleep";

    cst816s: cst816s@15 {
        compatible = "hynitron,cst816s";
        reg = <0x15>;
        status = "okay";
        irq-gpios = <&gpio1 2 GPIO_ACTIVE_LOW>;
        rst-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
    };
};

&spi4  {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi4_default>;
    pinctrl-1 = <&spi4_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;

    gc9a01: gc9a01@0 {
        compatible = "buydisplay,gc9a01";
        rotation = <180>;
        status = "okay";
        spi-max-frequency = <30000000>;
        reg = <0>;
        width = <240>;
        height = <240>;
        bl-gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>; // TODO: Can we remove this?
        reset-gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>;
        dc-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
    };
};

&qspi {
    status = "okay";
    pinctrl-0 = <&qspi_default>;
    pinctrl-1 = <&qspi_sleep>;
    pinctrl-names = "default", "sleep";

    mx25u51245g: mx25u51245g@0 {
        compatible = "nordic,qspi-nor";
        reg = <0>;
        sck-frequency = <96000000>;
        jedec-id = [c2 25 3a];
        size = <DT_SIZE_M(64*8)>;
        /*
        has-dpd;
        // CS High to Power-Down Mode (tDP) - 3 us
        // Rev. S Table 26. AC Electrical Characteristic
        t-enter-dpd = <20000>;
        // CS High to Standby Mode without Electronic Signature Read (tRES1) 3 us
        // Rev. S Table 26. AC Electrical Characteristic
        t-exit-dpd = <20000>;
        */
        // Configure to actully use Quad SPI data.
        writeoc = "pp4io";
        readoc = "read4io";
        quad-enable-requirements = "S1B6";
    };
};

/delete-node/ &storage_partition;

&mx25u51245g {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;
        
        // For Nordic Partition manager to work it has to have this name.
        littlefs_storage: partition@320000 {
            label = "littlefs_storage";
            reg = <0x320000 0x200000>;
        };

        lvgl_raw_partition: partition@520000 {
            label = "lvgl_raw_partition";
            reg = <0x520000 0x800000>;
        };

        storage_partition: partition@D20000 {
            label = "storage_partition";
            reg = <0xD20000 0x100000 >;
        };
    };
};

/ {
    reserved-memory {
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        sram0_image: image@20000000 {
            /* Zephyr image(s) memory */
        };

        sram0_s: image_s@20000000 {
            /* Secure image memory */
        };

        sram0_ns: image_ns@20040000 {
            /* Non-Secure image memory */
        };
    };

    sram@2006E000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x2006E000 0x2000>;
        zephyr,memory-region = "RetainedMem";
        status = "okay";

        retainedmem {
            compatible = "zephyr,retained-ram";
            status = "okay";
            #address-cells = <1>;
            #size-cells = <1>;

            retention_coredump: retention@0 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x0 0x1F00>;
                prefix = [04 fa];
                checksum = <1>;
            };

            retention0: retention@1F00 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1F00 0xFB>;
                prefix = [04 fa];
                checksum = <1>;
            };
            // Last byte in RAM is for boot mode.
            // Du to debugger only supports writing 4 bytes at a time
            // we need to leave a 3 byte gap between the two retention areas.
            retention1: retention@1FFF {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1FFF 0x1>;
            };
        };
    };

    chosen {
        zephyr,boot-mode = &retention1;
    };
};


/*
* Reduce SRAM0 usage by 256 bytes to account for non-init area.
* The last 256 bytes of SRAM0 are used for retention memory.
*/
&sram0 {
    //reg = <0x20000000 0x7DFFF>;
};

/* Include partition configuration file */
#include "nrf5340_cpuapp_partition_conf.dtsi"