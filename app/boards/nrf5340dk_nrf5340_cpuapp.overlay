/*
 * Copyright (c) 2023 Jakob Krantz
 *
 * SPDX-License-Identifier: Apache-2.0
 */

 &pinctrl {
    // Set to I2C pins that the sensors are connected to
    i2c3_default: i2c3_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 5)>,
                <NRF_PSEL(TWIM_SCL, 1, 4)>;
        };
    };

    i2c3_sleep: i2c3_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 5)>,
                <NRF_PSEL(TWIM_SCL, 1, 4)>;
            low-power-enable;
        };
    };

    // Set to I2C pins that the touch screen is connected to
    i2c2_default: i2c2_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
        };
    };

    i2c2_sleep: i2c2_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
            low-power-enable;
        };
    };

    // Set to the pins that the display is connected to
    spi4_default: spi4_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                <NRF_PSEL(SPIM_MOSI, 0, 4)>;
        };
    };

    spi4_sleep: spi4_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                <NRF_PSEL(SPIM_MOSI, 0, 4)>;
            low-power-enable;
        };
    };

};

/ {
    /delete-node/ buttons;
    
    chosen {
        zephyr,display = &gc9a01;
        zephyr,keyboard-scan = &cst816s;
        nordic,pm-ext-flash = &mx25r64;
    };

    lvgl_pointer_input: lvgl_pointer {
        compatible = "zephyr,lvgl-pointer-input";
        input = <&cst816s>;
        swap-xy;
        invert-x;
    };

    aliases {
        magn = &lis2mdl;
        accel = &bmi270;
        input = &cst816s;
        mcuboot-button0 = &button1;
        sw0 = &button4;
    };

    longpress: longpress {
        input = <&buttons>;
        compatible = "zephyr,input-longpress";
        input-codes = <INPUT_KEY_KP0>;
        short-codes = <INPUT_KEY_4>;
        long-codes = <INPUT_KEY_Y>;
        long-delay-ms = <1000>;
    };

    buttons: buttons {
        compatible = "gpio-keys";
        button1: button_1 {
            label = "top-right";
            gpios = <&gpio0 23 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_1>;
        };
        button2: button_2 {
            label = "bottom-left";
            gpios = <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_2>;
        };
        button3: button_3 {
            label = "bottom-right";
            gpios = <&gpio0 8 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_3>;
        };
        button4: button_4 {
            label = "top-left";
            gpios = <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            zephyr,code = <INPUT_KEY_KP0>;
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
    sense-edge-mask = < 0xffffffff >;
};

&gpio1 {
    status = "okay";
};

&timer1 {
    status = "okay";
};

&i2c3 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    zephyr,concat-buf-size = <512>;
    pinctrl-0 = <&i2c3_default>;
    pinctrl-1 = <&i2c3_sleep>;
    pinctrl-names = "default", "sleep";

    bmi270: bmi270@68 {
        compatible = "bosch,bmi270-plus";
        reg = <0x68>;
        int-gpios = <&gpio0 21 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
        invert-x;
        invert-y;
    };

    bme688: bme688@76 {
        compatible = "bosch,bme680";
        reg = <0x76>;
    };

    lis2mdl: lis2mdl@1e {
        compatible = "st,lis2mdl";
        reg = <0x1e>;
        irq-gpios = <&gpio0 24 0>;
    };

    bmp581: bmp581@47 {
        compatible = "bosch,zsw_bmp581";
        reg = <0x47>;
        int-gpios = <&gpio1 25 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
    };
};

&i2c2 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    pinctrl-0 = <&i2c2_default>;
    pinctrl-1 = <&i2c2_sleep>;
    pinctrl-names = "default", "sleep";

    cst816s: cst816s@15 {
        compatible = "hynitron,cst816s";
        reg = <0x15>;
        irq-gpios = <&gpio1 5 GPIO_ACTIVE_LOW>;
        rst-gpios = <&gpio1 8 GPIO_ACTIVE_LOW>;
    };
};

&i2c3_default {
    status = "okay";
};

&i2c3_default {
	group1 {
		bias-pull-up;
	};
};

&i2c2_default {
	group1 {
		bias-pull-up;
	};
};


&spi4  {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi4_default>;
    pinctrl-1 = <&spi4_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;

    gc9a01: gc9a01@0 {
        compatible = "buydisplay,gc9a01";
        status = "okay";
        spi-max-frequency = <8000000>;
        reg = <0>;
        width = <240>;
        height = <240>;
        bl-gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>; // Backlight not supported on DK. Must connect to 3V3 directly!
        reset-gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>;
        dc-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
    };
};


/ {
	fstab {
		compatible = "zephyr,fstab";
		lvgl_lfs: lvgl_lfs {
			compatible = "zephyr,fstab,littlefs";
			mount-point = "/lvgl_lfs";
			partition = <&littlefs_storage>;
			automount;
			read-size = <1024>;
			prog-size = <512>;
			cache-size = <4096>;
			lookahead-size = <4096>;
			block-cycles = <512>;
		};
	};
};

/delete-node/ &storage_partition;

&mx25r64 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;
        
        // For Nordic Partition manager to work it has to have this name.
        littlefs_storage: partition@320000 {
            label = "littlefs_storage";
            reg = <0x320000 0x10000>;
        };

        lvgl_raw_partition: partition@330000 {
            label = "lvgl_raw_partition";
            reg = <0x330000 0x4C8000>;
        };

        storage_partition: partition@7F8000 {
            label = "storage_partition";
            reg = <0x7F8000 0x8000>;
        };
    };
};

/ {
    sram@2006E000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x2006E000 0x2000>;
        zephyr,memory-region = "RetainedMem";
        status = "okay";

        retainedmem {
            compatible = "zephyr,retained-ram";
            status = "okay";
            #address-cells = <1>;
            #size-cells = <1>;

            retention_coredump: retention@0 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x0 0x1F00>;
                prefix = [04 fa];
                checksum = <1>;
            };

            retention0: retention@1F00 {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1F00 0xFB>;
                prefix = [04 fa];
                checksum = <1>;
            };
            // Last byte in RAM is for boot mode.
            // Du to debugger only supports writing 4 bytes at a time
            // we need to leave a 3 byte gap between the two retention areas.
            retention1: retention@1FFF {
                compatible = "zephyr,retention";
                status = "okay";
                reg = <0x1FFF 0x1>;
            };
        };
    };

    chosen {
            zephyr,boot-mode = &retention1;
            zephyr,console = &uart0;
    };
};

/*
* Reduce SRAM0 usage by 256 bytes to account for non-init area.
* The last 256 bytes of SRAM0 are used for retention memory.
*/
&sram0 {
    //reg = <0x20000000 0x7DFFF>;
};
